test(ocl2psql, "self");
        test(ocl2psql, "self = caller");
        test(ocl2psql, "self.Person:name");
        test(ocl2psql, "self.Person:name = 'Hoang'");
        test(ocl2psql, "self.Person:ownedCars");
        test(ocl2psql, "self.Person:ownedCars->size()");
        test(ocl2psql, "self.Person:ownedCars->exists(c|c.Car:color = 'black')");
        test(ocl2psql, "Car::allInstances()->exists(c|c.Car:owners->exists(p|p = self))");
        test(ocl2psql, "Car::allInstances()->exists(c|c.Car:owners->exists(p|p.Person:ownedCars->size() < self.Person:ownedCars->size()))");
    
        test(ocl2psql, "Car::allInstances()");
        test(ocl2psql, "Automobile::allInstances()");
        test(ocl2psql, "Vehicle::allInstances()");
        test(ocl2psql, "Automobile::allInstances()->collect(au|au)");
        test(ocl2psql, "Automobile::allInstances()->collect(au|au.Vehicle:category)");
//            test(ocl2psql, "Automobile::allInstances()->collect(au|au.Car:color)");
        test(ocl2psql, "Automobile::allInstances()->collect(au|au.oclIsTypeOf(Automobile))");
        test(ocl2psql, "Automobile::allInstances()->collect(au|au.oclIsTypeOf(Car))");
        test(ocl2psql, "Automobile::allInstances()->collect(au|au.oclIsTypeOf(Person))");
        test(ocl2psql, "Automobile::allInstances()->collect(au|au.oclIsTypeOf(Vehicle))");
        test(ocl2psql, "Automobile::allInstances()->collect(au|au.oclIsKindOf(Automobile))");
        test(ocl2psql, "Automobile::allInstances()->collect(au|au.oclIsKindOf(Car))");
        test(ocl2psql, "Automobile::allInstances()->collect(au|au.oclIsKindOf(Person))");
        test(ocl2psql, "Automobile::allInstances()->collect(au|au.oclIsKindOf(Vehicle))");
        test(ocl2psql, "Automobile::allInstances()->collect(au|au.oclAsType(Automobile))");
        test(ocl2psql, "Automobile::allInstances()->collect(au|au.oclAsType(Car))");
        test(ocl2psql, "Automobile::allInstances()->collect(au|au.oclAsType(Bus))");
//            test(ocl2psql, "Automobile::allInstances()->collect(au|au.oclAsType(Person))");
//            test(ocl2psql, "Automobile::allInstances()->collect(au|au.oclAsType(Vehicle))");
        test(ocl2psql, "Automobile::allInstances()->collect(au|au.oclAsType(Car).Car:color)");